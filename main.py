""""
–î–∞–Ω–Ω—ã–π –ø—Ä–µ–ª–æ–∞–¥–µ—Ä –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç, –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–∞
"""
import logging
import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode
from aiogram.utils import executor

import config

API_TOKEN = config.TOKEN_BOT
YOUR_CHANNEL_OWNER_ID = config.OWNER_ID  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite –∏ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
conn = sqlite3.connect('users.db')
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        username TEXT,
        registration_date TEXT
    )
''')
conn.commit()


@dp.message_handler(commands=['start'])
async def send_start(message: types.Message):
	"""
	–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
	–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
	"""
	# –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	user_id = message.from_user.id
	if message.from_user.id != YOUR_CHANNEL_OWNER_ID:
		username = message.from_user.username
		registration_date = message.date
		cursor.execute('INSERT INTO users (id, username, registration_date) VALUES (?, ?, ?)',
		               (user_id, username, registration_date))
		conn.commit()
	
	await message.answer(
		"–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
		"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ üéá 22 –º–∞—è 2024 –≥–æ–¥–∞ üéáüéâ\n\n"
		"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –Ω–∞—á–Ω–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ, –º—ã –æ–ø–æ–≤–µ—Å—Ç–∏–º –≤–∞—Å\n"
		f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–ª–∏ –í–∞–º –Ω—É–∂–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å [–Ω–∞–º–∏](tg://user?id={YOUR_CHANNEL_OWNER_ID})\n\n",
		parse_mode=types.ParseMode.MARKDOWN_V2)


@dp.message_handler(commands=['users_bot'])
async def show_users(message: types.Message):
	"""
	–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users_bot.
	–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
	"""
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞–Ω–∞–ª–∞
	if message.from_user.id != YOUR_CHANNEL_OWNER_ID:
		await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
		return
	
	cursor.execute('SELECT * FROM users')
	users = cursor.fetchall()
	if users:
		all_users = len(users)
		response = f"–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:     {all_users}\n"
		
		numbers = 0
		for user in users:
			numbers += 1
			response += f"\n‚Ññ {numbers} \nID:     {user[0]},\nUsername:      @{user[1]},\n" \
			            f"Registration Date:        {user[2]}\n"
	else:
		response = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç."
	await message.answer(response)


@dp.message_handler()
async def echo(message: types.Message):
	"""
	–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
	–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
	"""
	
	# –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	user_id = message.from_user.id
	if message.from_user.id != YOUR_CHANNEL_OWNER_ID:
		username = message.from_user.username
		registration_date = message.date
		cursor.execute('INSERT INTO users (id, username, registration_date) VALUES (?, ?, ?)',
		               (user_id, username, registration_date))
		conn.commit()
		
	await message.answer(
		"–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
		"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ üéá 22 –º–∞—è 2024 –≥–æ–¥–∞ üéáüéâ\n\n"
		"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –Ω–∞—á–Ω–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ, –º—ã –æ–ø–æ–≤–µ—Å—Ç–∏–º –≤–∞—Å\n"
		f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–ª–∏ –í–∞–º –Ω—É–∂–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å [–Ω–∞–º–∏](tg://user?id={YOUR_CHANNEL_OWNER_ID})\n\n",
		parse_mode=types.ParseMode.MARKDOWN_V2)


if __name__ == '__main__':
	executor.start_polling(dp, skip_updates=True)
